import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Link from 'next/link';

export default function truffleDocumentation () {

    return (
        <>
            <Head>
            <title>truffle-help</title>
            <meta name="description" content="Generated by create next app" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>
            <ul className={styles.nav}>
                <li><Link href="/">Home</Link></li>
                <li><Link href="/payment/payment_system">Payment</Link></li>
                <li><Link href="/code/apuntarseCode">Contrac Apuntarse</Link></li>
                <li><Link href="/code/casinoCode">Contrac Casino</Link></li>
            </ul>
            <div>
                <br />
                <br />
                <h1>Truffle documentation</h1>
                <br />

                <div>Como interactuar con los contratos utilizando web3 & truffle/contracts</div>
                
                <br />
                <br />
                <hr />
                <br />
                <br />

                
                    <h2>Start the project</h2>
                    <div>En primer lugar, deberemos crear un carpeta y abrirla mediante un VSCode</div>
                    <br />

                    <h2>Dependencies</h2>
                    <div>Se necesita tener node.js</div>
                     <br />
                        
                        <h3>Truffle</h3>
                            <pre>
                                <code>
                                    {`
                                        npm i truffle@latest
                                        npm i @truffle/contract
                                    `}
                                </code>
                            </pre>

                        <br />
                        <hr />
                        <br />
                        
                        <h3>Web3</h3>
                            <pre>
                                <code>
                                    {`
                                        npm i web3
                                    `}
                                </code>
                            </pre>
                        
                        <br />
                        <hr />
                        <br />
                        
                        <h3>Connection to an endpoint</h3>
                            <div>Para poder interactuar con la cadena, necesitamos tener conexión con un endpoint de la misma.</div>
                            <div>Algunos ejemplos</div>
                            <ul>
                                <li>https://goerli.infura.io/v3/YOUR-PROJECT-ID de Infura</li>
                                <li>https://rpc.ankr.com/eth_goerli de Ankr</li>
                            </ul>

                        <br />
                        <hr />
                        <br />
                        
                        <h3>ABIs</h3>
                            <div>Necesitamos tener la ABI del contrato con el que queremos interactuar.</div>
                        
                        <br />
                        <hr />
                        <br />
                        
                        <h3>Creación del Script</h3>
                            <div>Nos creamos un archivo .js, por ejemplo "interact.js"</div>
                            <pre>
                                <code>
                                    {`
                                        //Importamos la lib web3
                                        const Web3 = require('web3');
                                        
                                        //Importamos la lib truffle/contract
                                        const contract = require('@truffle/contract');
                                        
                                        //Establecemos nuestro endpoint como proveedor, por ejemplo Infura
                                        const web3 = new Web3(new Web3.providers.HttpProvider('*https://goerli.infura.io/v3/YOUR-PROJECT-ID'));
                                        
                                        //Importamos la ABI del contrato en formato JSON
                                        const contractABI = require('balance.json');
                                        
                                        //Creamos una variable para guardar el proveedor
                                        const provider = web3.currentProvider;
                                        
                                        //Creamos una variable para guardar nuestra dirección de cartera 
                                        const address = "Tu dirección de cartera";
                                        
                                        //Creamos la función asíncrona para interactuar con el contrato
                                        async function checkBalance() {
                                            
                                            //Llamada a la funcion contract() de truffle/contract
                                            const theContract = contract(contractABI);

                                            //Establecemos el provider de la instancia
                                            theContract.setProvider(provider);

                                            //Comprobamos que se encuentre en la red
                                            const balance = await theContract.deployed();
                                            
                                            //Creamos una variable value que recibe la llamada de la función al contrato
                                            let value = await balance.getBalance();

                                            //Lo imprimimos
                                            console.log(value.toNumber());
                                        }

                                        //Llamamos a la función asíncrona
                                        checkBalance();
                                    `}
                                </code>
                            </pre>
                        
                        <br />
                        <hr />
                        <br />
                        
                        <h4>Contrato Utilizado</h4>
                            <pre>
                                <code>
                                    {`
                                        pragma solidity >=0.8.13;

                                        contract balance {
                                            address public balance;
                                            
                                            constructor () {
                                                balance = 1000;
                                            }
                                            
                                            function getBalance() public view returns (uint256){
                                                return balance;
                                            }
                                        }
                                    `}
                                </code>
                            </pre>
                        <br />
                        <hr />
                        <br />
                        
                        <h4>Llamada al script</h4>
                            <pre>
                                <code>
                                    {`
                                        node interact
                                    `}
                                </code>
                            </pre>
                
                
                <br />
            </div>
            <pre>
                <code>
                    {`
                    
                    `}
                </code>
            </pre>
    </main>
        </>

        
    )
}
